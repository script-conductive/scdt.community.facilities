<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui, viewport-fit=cover">
<link href="style.css" rel="stylesheet">
</head>
<body>

<h1 class="touchpoint-title">👋 
  [%=t.label%]
</h1>
<br>
<button onclick="window.print()">Print this page</button>
[% var journeys = t.getParticipatedJourneys(); %]
<h3>Operaitons/Receptions ([%=t.features.size%])</h3>

<ul class="no-bullets">
  [% for(f in t.features) { %]
  <li>⚙️ [%=f.label%]</li>
  [%}%]
</ul>

[%
 for(j in journeys) { 
   var count = 0;
%]

<h2>
  When 👤 [%=j.persona.label%] <small style="color: lightgray;">isA | experiences </small><a id="[%=j.name%]" href="jn_[%=j.name%].html">[%=j.label%]</a>
</h2>
<table>
<tbody>
[%for(stage in j.stages) {  %]
<tr>
  <td><h2>[%=stage.label%] stage</h2></td>
  <td></td>
</tr>
[%for(step in stage.steps) { %]
<tr style="border-left: 1px solid #000;">
  <td style="padding-left: 20px;border-bottom: 1px dashed gray;width: 50%;"><span class="step-title ">[%=count++%]. [%=step.label%]</span> 
    <small style="color: blue;">
    [%for(exp in step.valueExps) {%]<span style="margin:5px;"> 😊  [%=exp%]</span>[%}%]
    </small> 
    <small style="color: red;">
    [%for(exp in step.devalueExps) {%]<span style="margin:5px;"> 😥  [%=exp%]</span>[%}%]
    </small> 
  </td>
  <td align="left">
    [%
    for(f in step.features) {%]
    👋 [%=t.label%] <b style="color: gray">provides</b> [%=f.label%]️ <br>
    [%}%]
   </td>
</tr>
 [%} } %]
</tbody>
</table>
 [%} %]
 
<div class="poweredby">
<small>Model-based software engineering powered by SCDT 
<a href="https://script-conductive.com"><img src="https://cdn.script-conductive.com/logos/logo.png"/></a>
</small>
</div>

<p>
Specified by developers: 
<hr>👋 = Touchpoint, 😊 = Value, 😥 = Devalue </p>

</body>
</html>



[%
function Touchpoint getParticipatedJourneys() : Set {
  var journeys =new Set();
  for(f in self.features) {
    var step = Step.all.select(s|s.features.contains(f)).first;
    if(step <> null and journeys.contains(step.eContainer.eContainer) = false) {
      journeys.add(step.eContainer.eContainer);
    }
  }
  return journeys;
}

function Touchpoint getParticipatedFeatures(journey) {
  var features = new Set();
  for(stage in journey.stages) {
    for(step in stage.steps) {
      var fs = step.features.select(f|f.eContainer = self);
      if (fs.size > 0) {
        features.add(fs.flatten());
      }
    }
  }
  return features.first;
}
%]